{"version":3,"sources":["Components/Header.js","Components/EditUser.js","Components/SearchBar.js","Components/TableDataRow.js","Components/TableData.js","Components/AddUser.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","EditUser","props","context","isChange","event","name","target","value","setState","saveButton","changeEditUserStatus","info","id","state","phone","permission","getUserInfo","userEditObject","defaultValue","this","onChange","type","placeholder","disabled","onClick","SearchBar","showButton","showForm","ketnoi","tempValue","getTextSearch","isShowEditForm","editUserStatus","infoObj","style","width","dl","TableDataRow","editUser","deleteButon","stt","TableData","mappingDataUser","dataUser","map","key","user","AddUser","checkStateForm","getNewUserData","item","App","doiTrangthai","searchText","uuidv4","items","data","push","localStorage","setItem","JSON","stringify","forEach","tempData","filter","DataUser","getItem","temp","parse","ketqua","indexOf","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ecea8645.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <h1>Quản lí User</h1>\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass EditUser extends Component {\r\n    // sử dụng state để lưu giữ thông tin cần sửa\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            id: this.props.userEditObject.id,\r\n            name: this.props.userEditObject.name,\r\n            phone: this.props.userEditObject.phone,\r\n            permission: this.props.userEditObject.permission\r\n        }\r\n    }\r\n    // hàm thay đổi thông tin cần sửa qua state\r\n    isChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    saveButton = () => {\r\n        this.props.changeEditUserStatus();\r\n        var info = {};\r\n        info.id = this.state.id;\r\n        info.name = this.state.name;\r\n        info.phone = this.state.phone;\r\n        info.permission = this.state.permission;\r\n        this.props.getUserInfo(info);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <div className=\"card text-left\">\r\n                    <div className=\"card text-white bg-warning mb-3\">\r\n                        <div className=\"card-header text-center\">Sửa thông tin</div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    defaultValue={this.props.userEditObject.name}\r\n                                    onChange={(event) => { this.isChange(event) }}\r\n                                    name=\"name\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Tên User\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    defaultValue={this.props.userEditObject.phone}\r\n                                    onChange={(event) => { this.isChange(event) }}\r\n                                    name=\"phone\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Điện thoại\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"input-group mb-3\">\r\n                                    <select\r\n                                        onChange={(event) => { this.isChange(event) }}\r\n                                        name=\"permission\"\r\n                                        className=\"custom-select\"\r\n                                        id=\"inputGroupSelect02\"\r\n                                        defaultValue={this.props.userEditObject.permission}\r\n                                    >\r\n                                        <option value=\"DEFAULT\" disabled>\r\n                                            Chọn quyền\r\n                      </option>\r\n                                        <option value={1}>Admin</option>\r\n                                        <option value={2}>Mod</option>\r\n                                        <option value={3}>Member</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button\r\n                                    type=\"reset\"\r\n                                    className=\"btn btn-block btn-primary\"\r\n                                    onClick={() => this.saveButton()}>Sửa\r\n                                    </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditUser;","import React, { Component } from 'react';\r\nimport EditUser from './EditUser';\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            // khởi tạo state để lưu giá trị người dùng nhập vào ô search, mặc định là null\r\n            tempValue: '',\r\n            infoObj: {}\r\n        }\r\n    }\r\n\r\n\r\n    // hàm chỉ giữ lại 1 button khi click thêm mới\r\n    showButton = () => {\r\n        if (this.props.showForm === true) {\r\n            return (\r\n                <div className=\"btn btn-outline-secondary\" onClick={() => this.props.ketnoi()}>Đóng</div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"btn btn-info\" onClick={() => this.props.ketnoi()}>Thêm mới</div>\r\n            )\r\n        }\r\n    }\r\n\r\n    // hàm check sự thay đổi khi nhập trong ô input, sử dụng tham số truyền vào để lấy giá trị người dùng nhập vào\r\n    // sau đó gán lại vào biển tempValue giá trị người dùng nhập\r\n    isChange = (event) => {\r\n        this.setState({\r\n            tempValue: event.target.value\r\n        });\r\n        this.props.getTextSearch(this.state.tempValue);\r\n    }\r\n\r\n    isShowEditForm = () => {\r\n        if (this.props.editUserStatus === true) {\r\n            return <EditUser getUserInfo={(info) => this.getUserInfo(info)} userEditObject={this.props.userEditObject}\r\n                changeEditUserStatus={() => this.props.changeEditUserStatus()} />\r\n        }\r\n    }\r\n    getUserInfo = (info) => {\r\n        this.setState({\r\n            infoObj: info\r\n        });\r\n        this.props.getUserInfo(info)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {this.isShowEditForm()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"btn-group\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Search Tên ...\" style={{ width: \"500px\" }}\r\n                            // onchange để kiểm tra người dùng nhập vào là gì, rồi lấy giá trị đó ra\r\n                            onChange={(event) => this.isChange(event)} />\r\n                        <div className=\"btn btn-info\"\r\n                            // từ đây đẩy dữ liêu lấy được từ ô input qua Component cha(App.js) tham số truyền vào là dl\r\n                            onClick={(dl) => this.props.getTextSearch(this.state.tempValue)}>\r\n                            Search Name ...</div>\r\n                    </div>\r\n                </div>\r\n                {this.showButton()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\n\r\nclass TableDataRow extends Component {\r\n\r\n    permission = () => {\r\n        if (this.props.permission === '1') {\r\n            return \"Admin\"\r\n        } else if (this.props.permission === '2') {\r\n            return \"Mod\"\r\n        } else {\r\n            return \"Member\"\r\n        }\r\n    }\r\n\r\n    // hàm nhận props truyền từ App.js xuống TableData.js\r\n    editUser = () => {\r\n        this.props.editUser();\r\n        this.props.changeEditUserStatus()\r\n    }\r\n    deleteButon = (id) => {\r\n        this.props.deleteButon(id)\r\n    }\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.stt + 1}</td>\r\n                <td>{this.props.name}</td>\r\n                <td>{this.props.phone}</td>\r\n                <td>{this.permission()}</td>\r\n                <td>\r\n                    <div className=\"btn-group\">\r\n                        <div className=\"btn btn-warning sua\">\r\n                            <i className=\"fa fa-edit\" onClick={() => this.editUser()}>Sửa</i>\r\n                        </div>\r\n                        <div className=\"btn btn-danger xoa\">\r\n                            <i className=\"fa fa-trash\" onClick={(id) => this.deleteButon(this.props.id)}>Xóa</i>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableDataRow;","import React, { Component } from 'react'\r\nimport TableDataRow from './TableDataRow'\r\n\r\nclass TableData extends Component {\r\n\r\n    // ham anh xa du lieu tu component cha sang component con\r\n    mappingDataUser = () =>\r\n        this.props.dataUser.map((value, key) => (\r\n            <TableDataRow editUser={(user) => this.props.editUser(value)} name={value.name} phone={value.phone} permission={value.permission} id={value.id} key={key} stt={key}\r\n                changeEditUserStatus={() => this.props.changeEditUserStatus()} deleteButon={(id) => { this.deleteButon(id) }} />\r\n        ));\r\n\r\n    deleteButon = (id) => {\r\n        this.props.deleteButon(id)\r\n    }\r\n    // this.props.editUser\r\n    render() {\r\n        return (\r\n            <div className=\"col\">\r\n                <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>STT</th>\r\n                            <th>Tên</th>\r\n                            <th>SĐT</th>\r\n                            <th>Quyền</th>\r\n                            <th>Chức năng</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.mappingDataUser()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableData;","import React, { Component } from 'react';\r\n\r\nclass AddUser extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            // tạo state để lưu giữu liệu nhập vào rồi chuyển qua nút lưu\r\n            id: '',\r\n            name: '',\r\n            phone: '',\r\n            permission: ''\r\n        }\r\n    }\r\n\r\n    // // xử lí logic cho nút thêm mới và đóng, chỉ xuất hiện 1 trong 2 nút\r\n    // // dùng state để lưu trạng thái của 2 nút\r\n    // constructor(props, context) {\r\n    //     super(props, context);\r\n    //     this.state = {\r\n    //         trangthaiChinhsua: true\r\n    //     }\r\n    // }\r\n    // // hàm để hiển thị nút, khi đnag chỉnh sửa thì sẽ đóng lại và ngược lại\r\n    // showButton = () => {\r\n    //     if (this.state.trangthaiChinhsua === true) {\r\n    //         return (\r\n    //             // use onClick de goi den ham changeTrangthai, dung arrow function de goi ham\r\n    //             // khong thi se bi loi xay ra thay doi state nhieu lan\r\n    //             // viet theo kieu arrow function thi click vao moi chay, khong bi loi lap vo so lan\r\n    //             <div className=\"btn btn-outline-secondary\" onClick={() => this.changeTrangthai()}>Đóng</div>\r\n    //         )\r\n    //     } else {\r\n    //         return (\r\n    //             <div className=\"btn btn-info\" onClick={() => this.changeTrangthai()}>Thêm mới</div>\r\n    //         )\r\n    //     }\r\n    // }\r\n\r\n    // // hàm thay đổi trạng thái, khi ấn button thì ẩn hiển form thêm mới\r\n    // // sử dụng setState để thay đổi trạng thái\r\n    // changeTrangthai = () => {\r\n    //     this.setState({\r\n    //         trangthaiChinhsua: !this.state.trangthaiChinhsua\r\n    //     });\r\n    // }\r\n    // hàm kiểm tra props truyền từ cha sang, có thể truyền state dưới dạng props nên ta check logic\r\n    // bên form con như bình thường\r\n    checkStateForm = () => {\r\n        if (this.props.showForm === true) {\r\n            return (\r\n                <form>\r\n                    <div className=\"card text-left\">\r\n                        <div className=\"card text-white bg-outline-success mb-3\">\r\n                            <div className=\"card-header\">Thêm mới User</div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        onChange={(event) => { this.isChange(event) }}\r\n                                        name=\"name\"\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Tên User\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        onChange={(event) => { this.isChange(event) }}\r\n                                        name=\"phone\"\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Điện thoại\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <select\r\n                                            onChange={(event) => { this.isChange(event) }}\r\n                                            name=\"permission\"\r\n                                            className=\"custom-select\"\r\n                                            id=\"inputGroupSelect02\"\r\n                                            defaultValue={\"DEFAULT\"}\r\n                                        >\r\n                                            <option value=\"DEFAULT\" disabled>\r\n                                                Chọn quyền\r\n                      </option>\r\n                                            <option value={1}>Admin</option>\r\n                                            <option value={2}>Mod</option>\r\n                                            <option value={3}>Member</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        onClick={(name, phone, permission) => this.props.getNewUserData(this.state.name,this.state.phone, this.state.permission)}\r\n                                        type=\"reset\"\r\n                                        className=\"btn btn-block btn-primary\"\r\n                                        value=\"Thêm\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n    // hàm lấy dữ liệu từ các ô input\r\n    isChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        // sau khi lấy được dữ liệu là 1 mảng, đóng gói lại để gửi lên App.js\r\n        var item = {};\r\n        item.id = this.state.id;\r\n        item.name = this.state.name;\r\n        item.phone = this.state.phone;\r\n        item.permission = this.state.permission;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* {this.showButton()} */}\r\n                {this.checkStateForm()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddUser;","import React, { Component } from \"react\";\nimport Header from \"./Components/Header\";\nimport SearchBar from \"./Components/SearchBar\";\nimport TableData from \"./Components/TableData\";\nimport AddUser from \"./Components/AddUser\";\nimport DataUser from \"./Data.json\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      // khoi tao state roi truyen qua component con duoi dang props\n      showForm: false,\n      data: DataUser,\n      searchText: \"\",\n      editUserStatus: false,\n      userEditObject: {},\n    };\n  }\n  // sử dụng lifecircle để tạo dữ liệu trước khi render\n\n  componentWillMount() {\n    // kiểm tra xem có localstorage hay chưa\n    if (localStorage.getItem(\"userData\") === null) {\n      localStorage.setItem(\"userData\", JSON.stringify(DataUser));\n    } else {\n      var temp = JSON.parse(localStorage.getItem(\"userData\"));\n      this.setState({\n        data: temp,\n      });\n    }\n  }\n\n  // tạo hàm đổi trạng thái state\n  doiTrangthai = () => {\n    this.setState({\n      showForm: !this.state.showForm,\n    });\n  };\n  // hàm lấy dữ liệu từ bên componentSearch gửi về\n  // sau đó lưu dữ liệu gửi về vào trong state\n  // sử dụng forEach để duyệt từng phần tử thay vì map, vì map phải trả về giá trị còn forEach thì không\n  getTextSearch = (dl) => {\n    this.setState({\n      searchText: dl,\n    });\n  };\n\n  // đóng gói dữ liêu từ AddUser trả lên rồi cập nhật lại data mới với setState\n  getNewUserData = (name, phone, permission) => {\n    var item = {};\n    item.id = uuidv4();\n    item.name = name;\n    item.phone = phone;\n    item.permission = permission;\n    var items = this.state.data;\n    items.push(item);\n    this.setState({\n      data: items,\n    });\n    // day du lieu them moi vao localstorage\n    localStorage.setItem(\"userData\", JSON.stringify(items));\n  };\n  // dữ liệu từ EditUser gửi lên\n  editUser = (user) => {\n    this.setState({\n      userEditObject: user,\n    });\n  };\n\n  changeEditUserStatus = () => {\n    this.setState({\n      editUserStatus: !this.state.editUserStatus,\n    });\n  };\n  getUserInfo = (info) => {\n    this.state.data.forEach((value, key) => {\n      if (value.id === info.id) {\n        value.name = info.name;\n        value.phone = info.phone;\n        value.permission = info.permission;\n      }\n      // day du lieu da sua vao localstorage\n      localStorage.setItem(\"userData\", JSON.stringify(this.state.data));\n    });\n  };\n  deleteButon = (id) => {\n    var tempData = this.state.data.filter((item) => item.id !== id);\n    this.setState({\n      data: tempData,\n    });\n    // day du lieu da xoa vao localstorage\n    localStorage.setItem(\"userData\", JSON.stringify(tempData));\n  };\n\n  render() {\n    // khai báo mảng trung gian để lưu lại những phần tử thỏa mãn điều kiện tìm kiếm\n    var ketqua = [];\n    this.state.data.forEach((item) => {\n      if (item.name.indexOf(this.state.searchText) !== -1) {\n        ketqua.push(item);\n      }\n    });\n    return (\n      <div>\n        <Header />\n        <div className=\"searchForm\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                {/* truyen tu Component cha sang Component con duoi dang prop, su dung arrow function va truyen duoi dang function */}\n                <SearchBar\n                  getUserInfo={(info) => this.getUserInfo(info)}\n                  userEditObject={this.state.userEditObject}\n                  ketnoi={() => this.doiTrangthai()}\n                  showForm={this.state.showForm}\n                  getTextSearch={(dl) => this.getTextSearch(dl)}\n                  editUserStatus={this.state.editUserStatus}\n                  changeEditUserStatus={() => this.changeEditUserStatus()}\n                />\n                <hr />\n              </div>\n              {/* truyen du lieu qua component con thong qua props */}\n              <TableData\n                deleteButon={(id) => {\n                  this.deleteButon(id);\n                }}\n                dataUser={ketqua}\n                editUser={(user) => this.editUser(user)}\n                changeEditUserStatus={() => this.changeEditUserStatus()}\n              />\n              {/* state khi truyen duoi dang props thi k can arrow function */}\n              <AddUser\n                showForm={this.state.showForm}\n                getNewUserData={(name, phone, permission) =>\n                  this.getNewUserData(name, phone, permission)\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}